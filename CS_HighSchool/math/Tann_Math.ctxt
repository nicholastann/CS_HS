#BlueJ class context
comment0.target=Tann_Math
comment0.text=\ \r\n\ This\ class\ contains\ static\ methods\ for\ performing\ math\ operations.\r\n\ Note\:\ A\ "final"\ class\ cannot\ be\ extended\ by\ any\ other\ class.\r\n
comment1.params=
comment1.target=void\ Lastname_Math()
comment1.text=\r\n\ This\ is\ a\ private\ constructor,\ so\ you\ can't\ make\ a\ Math\ object\!\r\n
comment10.params=a\ b
comment10.target=int\ min(int,\ int)
comment10.text=\r\n\ Returns\ the\ smaller\ of\ two\ integer\ values.\r\n\ @param\ A\ an\ int\ value.\r\n\ @param\ B\ an\ int\ value.\r\n\ @return\ The\ smaller\ value\ of\ two\ integers.\r\n
comment11.params=
comment11.target=double\ random()
comment11.text=\r\n\ Returns\ a\ random\ double\ value\ greater\ than\ or\ equal\ to\ 0.0\ and\ less\ than\ 1.0.\r\n\ Note\ this\ method\ uses\ java.util.Random.\r\n\ @return\ A\ random\ double\ value\ greater\ than\ or\ equal\ to\ 0.0\ and\ less\ than\ 1.0.\r\n
comment12.params=a
comment12.target=double\ sqrt(double)
comment12.text=\r\n\ Returns\ the\ square\ root\ of\ a\ double\ value.\r\n\ If\ the\ argument\ is\ less\ than\ or\ equal\ to\ zero,\ return\ zero.\r\n\ Does\ not\ need\ to\ work\ on\ negative\ numbers.\r\n\ @param\ A\ a\ double\ value\ to\ take\ the\ square\ root\ of.\r\n\ @return\ The\ square\ root\ of\ the\ double\ value.\r\n
comment13.params=a\ n
comment13.target=double\ nrt(double,\ int)
comment13.text=\r\n\ Returns\ the\ nth\ root\ of\ a\ double\ value.\r\n\ Does\ not\ need\ to\ work\ on\ negative\ numbers.\r\n\ @param\ A\ a\ double\ value\ to\ take\ the\ \ root\ of.\r\n\ @param\ An\ int\ value\ to\ determine\ root\r\n\ @return\ The\ square\ root\ of\ the\ double\ value.\r\n
comment14.params=base\ exp
comment14.target=double\ pow(int,\ int)
comment14.text=\r\n\ Returns\ the\ integer\ value\ of\ the\ first\ argument\ raise\ to\ the\ power\ of\ the\ second.\r\n\ If\ the\ second\ value\ is\ 0,\ return\ 1.\r\n\ If\ the\ second\ argument\ is\ 1,\ return\ the\ first\ argument.\r\n\ Does\ not\ need\ to\ work\ with\ negative\ exponent\ values.\r\n\ @param\ A\ a\ integer\ value\ to\ use\ as\ the\ base.\r\n\ @param\ B\ a\ integer\ value\ to\ use\ as\ the\ exponent.\r\n\ @return\ The\ integer\ value\ of\ the\ base\ to\ the\ exponent\ power.\r\n
comment15.params=base\ exp
comment15.target=double\ pow(double,\ int)
comment15.text=\r\n\ Returns\ the\ integer\ value\ of\ the\ first\ argument\ raise\ to\ the\ power\ of\ the\ second.\r\n\ If\ the\ second\ value\ is\ 0,\ return\ 1.\r\n\ If\ the\ second\ argument\ is\ 1,\ return\ the\ first\ argument.\r\n\ Does\ not\ need\ to\ work\ with\ negative\ exponent\ values.\r\n\ @param\ A\ a\ integer\ value\ to\ use\ as\ the\ base.\r\n\ @param\ B\ a\ integer\ value\ to\ use\ as\ the\ exponent.\r\n\ @return\ The\ integer\ value\ of\ the\ base\ to\ the\ exponent\ power.\r\n
comment16.params=base\ exp
comment16.target=double\ pow(double,\ double)
comment16.text=\r\n\ Returns\ the\ double\ value\ of\ the\ first\ argument\ raise\ to\ the\ power\ of\ the\ second.\r\n\ If\ the\ second\ value\ is\ 0.0,\ return\ 1.0.\r\n\ If\ the\ second\ argument\ is\ 1.0,\ return\ the\ first\ argument.\r\n\ Does\ work\ with\ negative\ exponent\ values.\r\n\ @param\ A\ a\ double\ value\ to\ use\ as\ the\ base.\r\n\ @param\ B\ a\ double\ value\ to\ use\ as\ the\ exponent.\r\n\ @return\ The\ double\ value\ of\ the\ base\ to\ the\ exponent\ power.\r\n
comment17.params=a
comment17.target=double\ log(double)
comment17.text=\r\n\ Returns\ the\ common\ logarithm\ (base\ ten)\ of\ a\ double\ value.\r\n\ If\ the\ double\ is\ less\ than\ or\ equal\ to\ zero,\ return\ zero.\r\n\ @param\ A\ a\ double\ value\ to\ calculate\ the\ common\ logarithm\ of.\r\n\ @return\ The\ common\ logarithm\ of\ the\ double\ value.\r\n
comment18.params=a
comment18.target=double\ ln(double)
comment18.text=\r\n\ Returns\ the\ natural\ logarithm\ (base\ e)\ of\ a\ double\ value.\r\n\ If\ the\ double\ is\ less\ than\ or\ equal\ to\ zero,\ return\ zero.\r\n\ @param\ A\ a\ double\ value\ to\ calculate\ the\ natural\ logarithm\ of.\r\n\ @return\ The\ natural\ logarithm\ of\ the\ double\ value.\r\n
comment2.params=a
comment2.target=double\ abs(double)
comment2.text=\r\n\ Returns\ the\ absolute\ value\ of\ a\ double\ value.\r\n\ @param\ A\ a\ double\ to\ get\ the\ absolute\ value\ of.\r\n\ @return\ The\ absolute\ value\ of\ the\ argument.\r\n
comment3.params=a
comment3.target=int\ abs(int)
comment3.text=\r\n\ Returns\ the\ absolute\ value\ of\ an\ int\ value.\r\n\ @param\ A\ an\ int\ to\ get\ the\ absolute\ value\ of.\r\n\ @return\ The\ absolute\ value\ of\ the\ argument.\r\n
comment4.params=a
comment4.target=double\ ceil(double)
comment4.text=\r\n\ Returns\ the\ double\ rounded-up\ to\ the\ next\ whole\ number.\r\n\ @param\ A\ a\ double\ value\ to\ round-up.\r\n\ @return\ The\ double\ value\ rounded-up\ to\ the\ next\ whole\ number.\r\n
comment5.params=a
comment5.target=double\ floor(double)
comment5.text=\r\n\ Returns\ the\ double\ rounded-down\ to\ the\ previous\ whole\ number.\r\n\ @param\ A\ a\ double\ value\ to\ round-down.\r\n\ @return\ The\ double\ value\ rounded-down\ to\ the\ previous\ whole\ number.\r\n
comment6.params=a
comment6.target=double\ round(double)
comment6.text=\r\n\ Returns\ the\ double\ rounded\ to\ the\ nearest\ whole\ number,\ with\ ties\ rounding-up.\r\n\ @param\ A\ a\ double\ value\ to\ round.\r\n\ @return\ The\ double\ value\ rounded\ to\ the\ nearest\ whole\ number,\ with\ ties\ rounding-up.\r\n
comment7.params=a\ b
comment7.target=double\ max(double,\ double)
comment7.text=\r\n\ Returns\ the\ greater\ of\ two\ double\ values.\r\n\ @param\ A\ a\ double\ value.\r\n\ @param\ B\ a\ double\ value.\r\n\ @return\ The\ greater\ value\ of\ two\ doubles.\r\n
comment8.params=a\ b
comment8.target=int\ max(int,\ int)
comment8.text=\r\n\ Returns\ the\ greater\ of\ two\ integer\ values.\r\n\ @param\ A\ an\ int\ value.\r\n\ @param\ B\ an\ int\ value.\r\n\ @return\ The\ greater\ value\ of\ two\ integers.\r\n
comment9.params=a\ b
comment9.target=double\ min(double,\ double)
comment9.text=\r\n\ Returns\ the\ smaller\ of\ two\ double\ values.\r\n\ @param\ A\ a\ double\ value.\r\n\ @param\ B\ a\ double\ value.\r\n\ @return\ The\ smaller\ value\ of\ two\ doubles.\r\n
numComments=19
